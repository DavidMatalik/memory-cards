{"version":3,"sources":["components/Scoreboard.js","components/Header.js","components/GameboardCard.js","images/cat1.jpg","images/cat2.jpg","images/cat3.jpg","images/cat4.jpg","images/cat5.jpg","images/cat6.jpg","images/cat7.jpg","images/cat8.jpg","components/Gameboard.js","fonts/DelicateSansBold.ttf","App.js","index.js"],"names":["Board","styled","div","Scoreboard","props","resetCards","cardClick","useState","bestScore","setBestScore","score","setScore","useEffect","HeaderTag","header","Heading","h1","Header","Card","order","Cardimage","img","Description","p","GameboardCard","counter","setCounter","onclickShuffle","afterClickCheckCount","title","resetCard","onClick","alt","src","Main","main","Gameboard","randomOrder","setRandomOrder","shuffleCards","newRandomOrder","map","num","i","arr","Math","floor","random","length","document","removeEventListener","cat1","checkCount","cat2","cat3","cat4","cat5","cat6","cat7","cat8","GlobalStyle","createGlobalStyle","font","App","setResetCards","setCardClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6e7899e.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst Board = styled.div`\n  grid-column: 3 / 4;\n  justify-self: end;\n  font-size: 200%;\n  text-shadow: 2px 2px 3px;\n  white-space: nowrap;\n  @media only screen and (max-width: 750px) {\n    grid-column: 1/ 2;\n    grid-row: 2 /3;\n    justify-self: center;\n  }\n`\n\nconst Scoreboard = (props) => {\n  const { resetCards, cardClick } = props\n  const [bestScore, setBestScore] = useState(0)\n  const [score, setScore] = useState(0)\n\n  useEffect(() => {\n    if (cardClick) {\n      setScore(score + 1)\n    }\n  }, [cardClick])\n\n  useEffect(() => {\n    if (score > bestScore) {\n      setBestScore(score)\n    }\n    setScore(0)\n  }, [resetCards])\n\n  return (\n    <Board>\n      <div>Score: {score} </div>\n      <div>Highscore: {bestScore}</div>\n    </Board>\n  )\n}\n\nexport default Scoreboard\n","import Scoreboard from './Scoreboard'\nimport styled from 'styled-components'\n\nconst HeaderTag = styled.header`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-items: center;\n  justify-items: center;\n  column-gap: 50px;\n  @media only screen and (max-width: 750px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`\nconst Heading = styled.h1`\n  grid-column: 2 / 3;\n  font-size: 400%;\n  text-shadow: 3px 3px 8px;\n  white-space: nowrap;\n  @media only screen and (max-width: 750px) {\n    grid-column: 1 / 2;\n    grid-row: 1 / 2;\n  }\n`\n\nconst Header = (props) => {\n  const { resetCards, cardClick } = props\n  return (\n    <HeaderTag>\n      <Heading>Memory Training</Heading>\n      <Scoreboard resetCards={resetCards} cardClick={cardClick} />\n    </HeaderTag>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\nimport { useState, useEffect } from 'react'\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  order: ${(props) => props.order};\n  width: 250px;\n  padding: 10px;\n  background: #001e6cba;\n  border-radius: 20px;\n  box-shadow: 5px 5px #001e6c54;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`\n\nconst Cardimage = styled.img`\n  width: 250px;\n  border-radius: 20px;\n`\n\nconst Description = styled.p`\n  margin: 5px 10px 0 10px;\n  font-size: 150%;\n  color: white;\n  text-shadow: 1px 1px 2px #ffaa4c;\n`\n\nconst GameboardCard = (props) => {\n  const [counter, setCounter] = useState(0)\n  const { order, onclickShuffle, afterClickCheckCount, title, resetCard, img } =\n    props\n\n  useEffect(() => {\n    setCounter(0)\n  }, [resetCard])\n\n  useEffect(() => {\n    if (counter) {\n      afterClickCheckCount(counter)\n    }\n  }, [counter])\n\n  const onclickIncrementCounter = () => {\n    setCounter(counter + 1)\n  }\n\n  const runClickFunctions = () => {\n    onclickIncrementCounter()\n    onclickShuffle()\n  }\n\n  return (\n    <Card order={order} onClick={runClickFunctions}>\n      <Cardimage alt='cat' src={img} />\n      <Description>{title}</Description>\n    </Card>\n  )\n}\n\nexport default GameboardCard\n","export default __webpack_public_path__ + \"static/media/cat1.b7f59eaf.jpg\";","export default __webpack_public_path__ + \"static/media/cat2.19187d5f.jpg\";","export default __webpack_public_path__ + \"static/media/cat3.cae3824e.jpg\";","export default __webpack_public_path__ + \"static/media/cat4.7b6fc3d2.jpg\";","export default __webpack_public_path__ + \"static/media/cat5.cbd5979c.jpg\";","export default __webpack_public_path__ + \"static/media/cat6.f6820711.jpg\";","export default __webpack_public_path__ + \"static/media/cat7.96364d23.jpg\";","export default __webpack_public_path__ + \"static/media/cat8.356aa5eb.jpg\";","import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport GameboardCard from './GameboardCard'\nimport cat1 from '../images/cat1.jpg'\nimport cat2 from '../images/cat2.jpg'\nimport cat3 from '../images/cat3.jpg'\nimport cat4 from '../images/cat4.jpg'\nimport cat5 from '../images/cat5.jpg'\nimport cat6 from '../images/cat6.jpg'\nimport cat7 from '../images/cat7.jpg'\nimport cat8 from '../images/cat8.jpg'\n\nconst Main = styled.main`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  justify-items: center;\n  gap: 40px;\n`\n\nconst Gameboard = (props) => {\n  const [randomOrder, setRandomOrder] = useState([1, 2, 3, 4, 5, 6, 7, 8])\n\n  const shuffleCards = () => {\n    // change numbers inside random order\n    let newRandomOrder = randomOrder.map((num, i, arr) => {\n      return Math.floor(Math.random() * arr.length)\n    })\n    setRandomOrder(newRandomOrder)\n  }\n\n  useEffect(() => {\n    shuffleCards()\n\n    return () => {\n      document.removeEventListener('click', shuffleCards)\n    }\n  }, [])\n\n  return (\n    <Main>\n      <GameboardCard\n        title='card1'\n        img={cat1}\n        order={randomOrder[0]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card2'\n        img={cat2}\n        order={randomOrder[1]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card3'\n        img={cat3}\n        order={randomOrder[2]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card4'\n        img={cat4}\n        order={randomOrder[3]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card5'\n        img={cat5}\n        order={randomOrder[4]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card6'\n        img={cat6}\n        order={randomOrder[5]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card7'\n        img={cat7}\n        order={randomOrder[6]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n      <GameboardCard\n        title='card8'\n        img={cat8}\n        order={randomOrder[7]}\n        onclickShuffle={shuffleCards}\n        afterClickCheckCount={props.checkCount}\n        resetCard={props.resetCards}\n      />\n    </Main>\n  )\n}\n\nexport default Gameboard\n","export default __webpack_public_path__ + \"static/media/DelicateSansBold.35ff91e2.ttf\";","import Header from './components/Header'\nimport Gameboard from './components/Gameboard'\nimport { useState } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport font from './fonts/DelicateSansBold.ttf'\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: DelicateSans;\n    src: url('${font}'); \n  }\n\n  * {\n    font-family: DelicateSans;\n  }\n\n  body {\n    background: #FFAA4C;\n    padding: 20px;\n  }\n`\n\nconst Description = styled.p`\n  text-align: center;\n  font-size: 200%;\n  text-shadow: 2px 2px 6px;\n`\n\nfunction App() {\n  const [resetCards, setResetCards] = useState(false)\n  const [cardClick, setCardClick] = useState(0)\n\n  const checkCount = (counter) => {\n    setCardClick(cardClick + 1)\n    if (counter === 2) {\n      setResetCards(!resetCards)\n    }\n  }\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Header resetCards={resetCards} cardClick={cardClick} />\n      <Description>\n        Remember on which cat you already clicked. And click on a new cat. If\n        you click on a cat you already clicked on, the game will restart.\n      </Description>\n      <Gameboard checkCount={checkCount} resetCards={resetCards} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}